{"version":3,"sources":["nativecontroller-loader.js"],"names":["NativeControllerLoader","connection","payer","controllerName","bytes","Buffer","from","controller","BusAccount","ControllerLoader","load","controllerId","PubKey"],"mappings":";;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AAGA;;;IAGaA,sB;;;;;;;;;;AAQX;;;;;;;yBAQEC,U,EACAC,K,EACAC,c,EACiB;AACjB,UAAMC,KAAK,uCAAOC,MAAM,CAACC,IAAP,CAAYH,cAAZ,CAAP,CAAX;AACA,UAAMI,UAAU,GAAG,IAAIC,sBAAJ,EAAnB;AACA,aAAOC,mCAAiBC,IAAjB,CACLT,UADK,EAELC,KAFK,EAGLK,UAHK,EAILP,sBAAsB,CAACW,YAJlB,EAKLP,KALK,CAAP;AAOD;;;;AA5BD;;;wBAGkC;AAChC,aAAO,IAAIQ,cAAJ,CAAW,6CAAX,CAAP;AACD","sourcesContent":["// @flow\n\nimport {BusAccount} from './bus-account';\nimport {PubKey} from './pubkey';\nimport {ControllerLoader} from './controller-loader';\nimport type {Connection} from './connection';\n\n/**\n * Factory class for transactions to interact with a controller loader\n */\nexport class NativeControllerLoader {\n  /**\n   * Public key that identifies the NativeControllerLoader\n   */\n  static get controllerId(): PubKey {\n    return new PubKey('NativeLoader1111111111111111111111111111111');\n  }\n\n  /**\n   * Loads a native controller\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the controller\n   * @param controllerName Name of the native controller\n   */\n  static load(\n    connection: Connection,\n    payer: BusAccount,\n    controllerName: string,\n  ): Promise<PubKey> {\n    const bytes = [...Buffer.from(controllerName)];\n    const controller = new BusAccount();\n    return ControllerLoader.load(\n      connection,\n      payer,\n      controller,\n      NativeControllerLoader.controllerId,\n      bytes,\n    );\n  }\n}\n"]}