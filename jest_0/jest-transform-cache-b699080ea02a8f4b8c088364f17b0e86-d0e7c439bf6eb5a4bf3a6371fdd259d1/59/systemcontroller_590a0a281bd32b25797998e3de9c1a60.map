{"version":3,"sources":["system-controller.js"],"names":["SystemController","from","createNewAccount","difs","reputations","space","controllerId","dataLayout","BufferLayout","struct","u32","ns64","Layout","pubKey","data","Buffer","alloc","span","encode","instruction","toBuffer","Transaction","add","keys","pubkey","isSigner","isDebitable","to","amount","PubKey"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\nimport {Transaction} from './transaction-controller';\nimport {PubKey} from './pubkey';\nimport * as Layout from './resize';\n\n/**\n * Factory class for transactions to interact with the System controller\n */\nexport class SystemController {\n  /**\n   * Public key that identifies the System controller\n   */\n  static get controllerId(): PubKey {\n    return new PubKey(\n      '0x000000000000000000000000000000000000000000000000000000000000000',\n    );\n  }\n\n  /**\n   * Generate a Transaction that creates a new account\n   */\n  static createNewAccount(\n    from: PubKey,\n    createNewAccount: PubKey,\n    difs: number,\n    reputations: number,\n    space: number,\n    controllerId: PubKey,\n  ): Transaction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('difs'),\n      BufferLayout.ns64('reputations'),\n      BufferLayout.ns64('space'),\n      Layout.pubKey('controllerId'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 0, // Create BusAccount instruction\n        difs,\n        reputations,\n        space,\n        controllerId: controllerId.toBuffer(),\n      },\n      data,\n    );\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: from, isSigner: true, isDebitable: true},\n        {pubkey: createNewAccount, isSigner: false, isDebitable: true},\n      ],\n      controllerId: SystemController.controllerId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that transfers difs from one account to another\n   */\n  static transfer(from: PubKey, to: PubKey, amount: number): Transaction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 2, // Move instruction\n        amount,\n      },\n      data,\n    );\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: from, isSigner: true, isDebitable: true},\n        {pubkey: to, isSigner: false, isDebitable: false},\n      ],\n      controllerId: SystemController.controllerId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that transfers reputations from one account to another\n   */\n  static transferReputation(from: PubKey, to: PubKey, amount: number): Transaction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 2, // Move instruction\n        amount,\n      },\n      data,\n    );\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: from, isSigner: true, isDebitable: true},\n        {pubkey: to, isSigner: false, isDebitable: false},\n      ],\n      controllerId: SystemController.controllerId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that assigns an account to a controller\n   */\n  static assign(from: PubKey, controllerId: PubKey): Transaction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.pubKey('controllerId'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 1, // Assign instruction\n        controllerId: controllerId.toBuffer(),\n      },\n      data,\n    );\n\n    return new Transaction().add({\n      keys: [{pubkey: from, isSigner: true, isDebitable: true}],\n      controllerId: SystemController.controllerId,\n      data,\n    });\n  }\n}\n"]}