{"version":3,"sources":["system-program.test.js"],"names":["test","from","BusAccount","createNewAccount","transaction","SystemController","pubKey","BudgetController","space","controllerId","expect","keys","toHaveLength","toEqual","to","transfer","assign"],"mappings":";;AAEA;;AAEAA,IAAI,CAAC,kBAAD,EAAqB,YAAM;AAC7B,MAAMC,IAAI,GAAG,IAAIC,eAAJ,EAAb;AACA,MAAMC,gBAAgB,GAAG,IAAID,eAAJ,EAAzB;AACA,MAAIE,WAAJ;AAEAA,EAAAA,WAAW,GAAGC,sBAAiBF,gBAAjB,CACZF,IAAI,CAACK,MADO,EAEZH,gBAAgB,CAACG,MAFL,EAGZ,GAHY,EAIZC,sBAAiBC,KAJL,EAKZD,sBAAiBE,YALL,CAAd;AAQAC,EAAAA,MAAM,CAACN,WAAW,CAACO,IAAb,CAAN,CAAyBC,YAAzB,CAAsC,CAAtC;AACAF,EAAAA,MAAM,CAACN,WAAW,CAACK,YAAb,CAAN,CAAiCI,OAAjC,CAAyCR,sBAAiBI,YAA1D,EAd6B,CAe7B;AACD,CAhBG,CAAJ;AAkBAT,IAAI,CAAC,UAAD,EAAa,YAAM;AACrB,MAAMC,IAAI,GAAG,IAAIC,eAAJ,EAAb;AACA,MAAMY,EAAE,GAAG,IAAIZ,eAAJ,EAAX;AACA,MAAIE,WAAJ;AAEAA,EAAAA,WAAW,GAAGC,sBAAiBU,QAAjB,CAA0Bd,IAAI,CAACK,MAA/B,EAAuCQ,EAAE,CAACR,MAA1C,EAAkD,GAAlD,CAAd;AAEAI,EAAAA,MAAM,CAACN,WAAW,CAACO,IAAb,CAAN,CAAyBC,YAAzB,CAAsC,CAAtC;AACAF,EAAAA,MAAM,CAACN,WAAW,CAACK,YAAb,CAAN,CAAiCI,OAAjC,CAAyCR,sBAAiBI,YAA1D,EARqB,CASrB;AACD,CAVG,CAAJ;AAYAT,IAAI,CAAC,QAAD,EAAW,YAAM;AACnB,MAAMC,IAAI,GAAG,IAAIC,eAAJ,EAAb;AACA,MAAMY,EAAE,GAAG,IAAIZ,eAAJ,EAAX;AACA,MAAIE,WAAJ;AAEAA,EAAAA,WAAW,GAAGC,sBAAiBW,MAAjB,CAAwBf,IAAI,CAACK,MAA7B,EAAqCQ,EAAE,CAACR,MAAxC,CAAd;AAEAI,EAAAA,MAAM,CAACN,WAAW,CAACO,IAAb,CAAN,CAAyBC,YAAzB,CAAsC,CAAtC;AACAF,EAAAA,MAAM,CAACN,WAAW,CAACK,YAAb,CAAN,CAAiCI,OAAjC,CAAyCR,sBAAiBI,YAA1D,EARmB,CASnB;AACD,CAVG,CAAJ","sourcesContent":["// @flow\n\nimport {BusAccount, BudgetController, SystemController} from '../src';\n\ntest('createNewAccount', () => {\n  const from = new BusAccount();\n  const createNewAccount = new BusAccount();\n  let transaction;\n\n  transaction = SystemController.createNewAccount(\n    from.pubKey,\n    createNewAccount.pubKey,\n    123,\n    BudgetController.space,\n    BudgetController.controllerId,\n  );\n\n  expect(transaction.keys).toHaveLength(2);\n  expect(transaction.controllerId).toEqual(SystemController.controllerId);\n  // TODO: Validate transaction contents more\n});\n\ntest('transfer', () => {\n  const from = new BusAccount();\n  const to = new BusAccount();\n  let transaction;\n\n  transaction = SystemController.transfer(from.pubKey, to.pubKey, 123);\n\n  expect(transaction.keys).toHaveLength(2);\n  expect(transaction.controllerId).toEqual(SystemController.controllerId);\n  // TODO: Validate transaction contents more\n});\n\ntest('assign', () => {\n  const from = new BusAccount();\n  const to = new BusAccount();\n  let transaction;\n\n  transaction = SystemController.assign(from.pubKey, to.pubKey);\n\n  expect(transaction.keys).toHaveLength(1);\n  expect(transaction.controllerId).toEqual(SystemController.controllerId);\n  // TODO: Validate transaction contents more\n});\n"]}