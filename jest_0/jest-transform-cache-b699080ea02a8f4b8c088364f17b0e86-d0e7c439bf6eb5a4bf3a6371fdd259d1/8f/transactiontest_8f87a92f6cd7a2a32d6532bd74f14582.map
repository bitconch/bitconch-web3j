{"version":3,"sources":["transaction.test.js"],"names":["test","account1","BusAccount","account2","recentPackagehash","pubKey","toBase58","transfer","SystemController","transaction","Transaction","add","sign","partialTransaction","signPartial","expect","signatures","signature","toBeNull","addSigner","toEqual","transfer1","transfer2","orgTransaction","newTransaction","keypair","nacl","keyPair","fromSeed","Uint8Array","from","Array","fill","sender","Buffer","secretKey","recipient","PubKey","expectedTransaction","wireTransaction","tx","serialize"],"mappings":"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","sourcesContent":["// @flow\nimport nacl from 'tweetnacl';\n\nimport {BusAccount} from '../src/bus-account';\nimport {PubKey} from '../src/pubkey';\nimport {Transaction} from '../src/transaction-controller';\nimport {SystemController} from '../src/system-controller';\n\ntest('signPartial', () => {\n  const account1 = new BusAccount();\n  const account2 = new BusAccount();\n  const recentPackagehash = account1.pubKey.toBase58(); // Fake recentPackagehash\n  const transfer = SystemController.transfer(\n    account1.pubKey,\n    account2.pubKey,\n    123,\n  );\n\n  const transaction = new Transaction({recentPackagehash}).add(transfer);\n  transaction.sign(account1, account2);\n\n  const partialTransaction = new Transaction({recentPackagehash}).add(transfer);\n  partialTransaction.signPartial(account1, account2.pubKey);\n  expect(partialTransaction.signatures[1].signature).toBeNull();\n  partialTransaction.addSigner(account2);\n\n  expect(partialTransaction).toEqual(transaction);\n});\n\ntest('transfer signatures', () => {\n  const account1 = new BusAccount();\n  const account2 = new BusAccount();\n  const recentPackagehash = account1.pubKey.toBase58(); // Fake recentPackagehash\n  const transfer1 = SystemController.transfer(\n    account1.pubKey,\n    account2.pubKey,\n    123,\n  );\n  const transfer2 = SystemController.transfer(\n    account2.pubKey,\n    account1.pubKey,\n    123,\n  );\n\n  const orgTransaction = new Transaction({recentPackagehash}).add(\n    transfer1,\n    transfer2,\n  );\n  orgTransaction.sign(account1, account2);\n\n  const newTransaction = new Transaction({\n    recentPackagehash: orgTransaction.recentPackagehash,\n    signatures: orgTransaction.signatures,\n  }).add(transfer1, transfer2);\n\n  expect(newTransaction).toEqual(orgTransaction);\n});\n\ntest('dedup signatures', () => {\n  const account1 = new BusAccount();\n  const account2 = new BusAccount();\n  const recentPackagehash = account1.pubKey.toBase58(); // Fake recentPackagehash\n  const transfer1 = SystemController.transfer(\n    account1.pubKey,\n    account2.pubKey,\n    123,\n  );\n  const transfer2 = SystemController.transfer(\n    account1.pubKey,\n    account2.pubKey,\n    123,\n  );\n\n  const orgTransaction = new Transaction({recentPackagehash}).add(\n    transfer1,\n    transfer2,\n  );\n  orgTransaction.sign(account1);\n});\n\ntest('parse wire format and serialize', () => {\n  const keypair = nacl.sign.keyPair.fromSeed(\n    Uint8Array.from(Array(32).fill(8)),\n  );\n  const sender = new BusAccount(Buffer.from(keypair.secretKey)); // Arbitrary known account\n  const recentPackagehash = 'EETubP5AKHgjPAhzPAFcb8BAY1hMH639CWCFTqi3hq1k'; // Arbitrary known recentPackagehash\n  const recipient = new PubKey(\n    'J3dxNj7nDRRqRRXuEMynDG57DkZK4jYRuv3Garmb1i99',\n  ); // Arbitrary known public key\n  const transfer = SystemController.transfer(sender.pubKey, recipient, 49);\n  const expectedTransaction = new Transaction({recentPackagehash}).add(transfer);\n  expectedTransaction.sign(sender);\n\n  const wireTransaction = Buffer.from([\n    1,\n    47,\n    50,\n    66,\n    17,\n    219,\n    90,\n    187,\n    49,\n    40,\n    77,\n    8,\n    58,\n    129,\n    51,\n    76,\n    13,\n    206,\n    126,\n    157,\n    189,\n    188,\n    53,\n    174,\n    42,\n    80,\n    4,\n    4,\n    212,\n    55,\n    67,\n    171,\n    34,\n    224,\n    81,\n    68,\n    230,\n    120,\n    117,\n    204,\n    241,\n    167,\n    152,\n    74,\n    141,\n    132,\n    73,\n    166,\n    217,\n    173,\n    27,\n    75,\n    62,\n    171,\n    160,\n    100,\n    159,\n    116,\n    164,\n    45,\n    185,\n    64,\n    0,\n    72,\n    4,\n    1,\n    0,\n    2,\n    3,\n    19,\n    152,\n    246,\n    44,\n    109,\n    26,\n    69,\n    124,\n    81,\n    186,\n    106,\n    75,\n    95,\n    61,\n    189,\n    47,\n    105,\n    252,\n    169,\n    50,\n    22,\n    33,\n    141,\n    200,\n    153,\n    126,\n    65,\n    107,\n    209,\n    125,\n    147,\n    202,\n    253,\n    67,\n    159,\n    204,\n    182,\n    103,\n    39,\n    242,\n    137,\n    197,\n    198,\n    222,\n    59,\n    196,\n    168,\n    254,\n    93,\n    213,\n    215,\n    119,\n    112,\n    188,\n    143,\n    241,\n    92,\n    62,\n    238,\n    220,\n    177,\n    74,\n    243,\n    252,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    196,\n    154,\n    231,\n    118,\n    3,\n    120,\n    32,\n    84,\n    241,\n    122,\n    157,\n    236,\n    234,\n    67,\n    180,\n    68,\n    235,\n    160,\n    237,\n    177,\n    44,\n    111,\n    29,\n    49,\n    198,\n    224,\n    228,\n    168,\n    75,\n    240,\n    82,\n    235,\n    1,\n    2,\n    2,\n    0,\n    1,\n    12,\n    2,\n    0,\n    0,\n    0,\n    49,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n  ]);\n  const tx = Transaction.from(wireTransaction);\n\n  expect(tx).toEqual(expectedTransaction);\n  expect(wireTransaction).toEqual(expectedTransaction.serialize());\n});\n"]}