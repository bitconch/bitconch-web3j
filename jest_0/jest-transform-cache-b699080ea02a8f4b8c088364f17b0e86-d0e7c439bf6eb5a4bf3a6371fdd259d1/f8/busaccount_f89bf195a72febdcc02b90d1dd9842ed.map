{"version":3,"sources":["bus-account.js"],"names":["BusAccount","privateKey","_keypair","nacl","sign","keyPair","fromSecretKey","PubKey","publicKey","secretKey"],"mappings":";;;;;;;;;;;;;;;AACA;;AAGA;;AAEA;;;IAGaA,U;;;AAGX;;;;;;;;AAQA,wBAAwC;AAAA,QAA5BC,UAA4B,uEAAN,IAAM;AAAA;AAAA;;AACtC,QAAIA,UAAJ,EAAgB;AACd,WAAKC,QAAL,GAAgBC,sBAAKC,IAAL,CAAUC,OAAV,CAAkBC,aAAlB,CAAgCL,UAAhC,CAAhB;AACD,KAFD,MAEO;AACL,WAAKC,QAAL,GAAgBC,sBAAKC,IAAL,CAAUC,OAAV,EAAhB;AACD;AACF;AAED;;;;;;;wBAGqB;AACnB,aAAO,IAAIE,cAAJ,CAAW,KAAKL,QAAL,CAAcM,SAAzB,CAAP;AACD;AAED;;;;;;wBAGyB;AACvB,aAAO,KAAKN,QAAL,CAAcO,SAArB;AACD","sourcesContent":["// @flow\nimport nacl from 'tweetnacl';\nimport type {KeyPair} from 'tweetnacl';\n\nimport {PubKey} from './pubkey';\n\n/**\n * An account key pair (public and secret keys).\n */\nexport class BusAccount {\n  _keypair: KeyPair;\n\n  /**\n   * Create a new BusAccount object\n   *\n   * If the privateKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param privateKey Secret key for the account\n   */\n  constructor(privateKey: ?Buffer = null) {\n    if (privateKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(privateKey);\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get pubKey(): PubKey {\n    return new PubKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get privateKey(): Buffer {\n    return this._keypair.secretKey;\n  }\n}\n"]}